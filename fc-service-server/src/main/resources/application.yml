management:
  endpoint:
    configprops:
      show-values: ALWAYS
    env:
      show-values: ALWAYS  
  endpoints:
    web:
      exposure:
        include: "*" #health, info, metrics, prometheus, graph-rebuild

server:
  port: 8081
  tomcat:
    mbeanregistry:
      enabled: true
    threads:
      max: 200
      min-spare: 20
  shutdown: graceful

spring:
  application:
    name: federated-catalogue-service
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    platform: postgresql
    hikari:
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      minimumIdle: 8
      maximumPoolSize: 128
  liquibase:
    change-log: classpath:/liquibase/master-changelog.xml
  main:
    allow-bean-definition-overriding: true    
  mvc:
    log-request-details: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://key-server:8080/realms/gaia-x
#          jwk-set-uri: http://key-server:8080/realms/gaia-x/protocol/openid-connect/certs
  transaction:
    default-timeout: 10

scheduler:
  sd:
    cron:
      expression: 0 1 0 * * *
  schema:
    init-delay: 10000

openapi:
  gaiaXCatalogue:
    base-path: ""

springdoc:
  api-docs:
    path: /api/docs
    enabled: true

keycloak:
  auth-server-url: http://key-server:8080
  realm: gaia-x
  resource: federated-catalogue
  credentials:
    secret: vZo1equicRl1UdxJDWCNNJWe6vJcm2Cg

datastore:
  file-path: target

graphstore:
  uri: bolt://localhost:7687
  user: neo4j
  password: neo12345

publisher:
  impl: none #nats
  url: nats://localhost:4222 
  subject: fc.sd
  instance: http://localhost:8081
  send-content: false

subscriber:
  impl: none
  url: nats://localhost:4222
  subject: fc.sd.*
  instance: http://localhost:8082
  stream: fc-sd 
  queue: sd-processor
  group: sd-group
  
federated-catalogue:
  scope: runtime
  file-store:
    cached: true
    cache-size: 128
    schema:
      location: schemaFiles
    context-cache:
      location: contextCacheFiles
  query:
    partners:
    self: "http://localhost:${server.port}"
  verification:
    trust-anchor-url: "https://registry.lab.gaia-x.eu/v1/api/trustAnchor/chain/file"
    did-resolver-url: "https://dev.uniresolver.io/1.0/identifiers/"
    # add additional context for the GAIA-X trustfromework here. Use a comma separated list of URLs, that will be loaded as additional context(s) into the VerifiablePresentation
    additional-contexts: ""
    participant:
      type: "https://w3id.org/gaia-x/core#Participant"
    resource:
      type: "https://w3id.org/gaia-x/core#Resource"
    service-offering:
      type: "https://w3id.org/gaia-x/core#ServiceOffering"
    semantics: true
    schema: true
    signatures: true

logging:
  level:
    root: INFO
    eu.xfsc.fc: DEBUG
#    org.neo4j.driver: DEBUG
#    org.springframework: DEBUG
    org.springframework.web: INFO
#    org.springframework.security: DEBUG
